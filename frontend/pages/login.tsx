import { useState } from "react";
import { useRouter } from "next/navigation";
import { useEffect } from "react";
import { connectWebSocket } from "../utils/websocket";
import Head from "next/head";
import Link from "next/link";

export default function Login() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const router = useRouter();

  const handleLogin = async () => {
    try {
      const res = await fetch("http://localhost:8080/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ username, password }),
      });

      if (res.status === 200) {
        const user = await res.json();
        localStorage.setItem("loggedInUser", user.username);
        localStorage.setItem("loggedInUserID", user.userId);
        localStorage.setItem("token", user.token);

        alert("ログイン成功！");
        router.push("/roomSelect");

        // // ログイン成功後にWebSocket接続
        //const socket = connectWebSocket((message: any) => {
        const socket = connectWebSocket();
        if (socket !== null) {
          console.log("天才！")
          console.log("受信したメッセージ:");
        };


      } else {
        alert("ログイン失敗");
        router.refresh();
      }
    } catch (error) {
      console.error("通信エラー:", error);
      alert("通信エラーが発生しました");
    }
  };

  // useEffect(() => {
  //   // 初回レンダリング時にWebSocket接続の設定を行う
  //   const socket = connectWebSocket((message: any) => {
  //     console.log("受信したメッセージ:", message);
  //   });
  //   console.log("天才！")

  //   socket.onopen = () => {
  //     console.log("WebSocket接続成功！");
  //   };

  //   // コンポーネントがアンマウントされた時にWebSocketを閉じる
  //   return () => {
  //     //socket.close();
  //   };
  // }, []); // 初回レンダリング時にだけ実行される

  return (
    <>
      <Head>
        <title>ログイン</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div style={{
        background: "linear-gradient(180deg, #e8f5e9, #fffde7)",
        minHeight: "100vh",
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        alignItems: "center"
      }}>
        <div style={{
          backgroundColor: "#ffffff",
          padding: "40px",
          borderRadius: "30px",
          boxShadow: "0px 8px 16px rgba(0,0,0,0.1)",
          textAlign: "center",
          width: "90%",
          maxWidth: "400px"
        }}>
          <h1 style={{ color: "#388e3c", fontWeight: "bold", marginBottom: "20px" }}>ログイン</h1>
          <input
            type="text"
            placeholder="ユーザー名"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            style={{
              width: "100%",
              padding: "12px",
              margin: "8px 0",
              borderRadius: "20px",
              border: "1px solid #ccc",
              outline: "none",
              boxShadow: "inset 0 2px 4px rgba(0,0,0,0.1)"
            }}
          />
          <input
            type="password"
            placeholder="パスワード"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={{
              width: "100%",
              padding: "12px",
              margin: "8px 0",
              borderRadius: "20px",
              border: "1px solid #ccc",
              outline: "none",
              boxShadow: "inset 0 2px 4px rgba(0,0,0,0.1)"
            }}
          />
          <button
            onClick={handleLogin}
            style={{
              backgroundColor: "#388e3c",
              color: "#fff",
              padding: "12px 24px",
              marginTop: "20px",
              borderRadius: "20px",
              border: "none",
              cursor: "pointer",
              transition: "all 0.3s",
              boxShadow: "0 2px 4px rgba(0,0,0,0.1)"
            }}
          >
            ログイン
          </button>
          <p style={{ marginTop: "15px" }}>
            <Link href="/top" style={{ color: "#388e3c" }}>トップへ戻る →</Link>
          </p>
        </div>
      </div>
    </>
  );
}
