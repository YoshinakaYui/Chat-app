# バージョン指定
version: '3.8'

# 各コンテナ(サービス)の定義
services:
  # バックエンドサービス
  backend:
    # ./backendフォルダ内のDockerfileからイメージをビルド
    build: ./backend
    # データベース（db）サービスが正常に動作しているか確認(順序確認が目的)
    depends_on:
      db:
        # データベースが正常に起動するのを確認してからバックエンドを起動(より安全)
        condition: service_healthy
    # ホストの8080ポートとコンテナの8080ポートをマッピング
    ports:
      - "8080:8080"
    # ホットリロードのためのマウントを指定
    volumes:
      - ./backend:/app
      - /app/tmp

    working_dir: /app
    # airを使って自動リロード（ホットリロード）を実現
    command: ["air", "-c", ".air.toml"]
    # 環境変数としてデータベース接続情報を指定
    environment:
      # DB_DSN: host=db user=user password=password dbname=chat_app_db port=5432 sslmode=disable
      DB_DSN: postgres://user:password@db:5432/chat_app_db?sslmode=disable

  # フロントエンドサービス
  frontend:
    build: ./frontend
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: npm run dev

  # データベースサービス
  db:
    image: postgres:15
    # 自動再起動
    restart: always
    environment:
      POSTGRES_DB: chat_app_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - chat_app_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d chat_app_db -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdminサービス
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  chat_app_db_data:
  pgadmin-data:
